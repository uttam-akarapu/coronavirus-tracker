{"version":3,"sources":["logo.svg","aboutus/aboutus.js","home/home.js","header/mainmenu/mainmenu.js","header/header.js","WorldList/WorldList.js","countrylist/countrylist.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AboutUs","className","Component","Home","mainmenu","to","href","Header","WorldList","props","state","posts","errorMsg","axios","get","then","response","console","log","postdata","push","setState","catch","error","this","length","map","post","data","Global","NewConfirmed","TotalConfirmed","NewDeaths","TotalDeaths","NewRecovered","TotalRecovered","coronaDetails","list_date","convertedDate","Date","toDateString","id","onchange","value","Countries","ctry","Country","App","path","exact","component","Aboutus","Corona","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4b579690.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\n\r\nimport './aboutus.css';\r\n\r\n \r\n\r\nexport default class AboutUs extends Component{\r\n\r\n \r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <div className=\"countryListContainer\">\r\n\r\n                <h2>About US page</h2>\r\n\r\n            </div>\r\n\r\n           \r\n\r\n        );\r\n\r\n    }\r\n\r\n \r\n\r\n \r\n\r\n}\r\n\r\n ","import React, { Component } from \"react\";\r\n\r\nimport './home.css';\r\n\r\n \r\n\r\nexport default class Home extends Component{\r\n\r\n \r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <div className=\"countryListContainer\">\r\n\r\n                <h2>Home Page </h2>\r\n\r\n            </div>\r\n\r\n           \r\n\r\n        );\r\n\r\n    }\r\n\r\n \r\n\r\n \r\n\r\n}","import React, { Component } from \"react\";\r\n\r\nimport './mainmenu.css';\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\n \r\n\r\n \r\n\r\n \r\n\r\nclass mainmenu extends Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n\r\n            <div>\r\n\r\n                <div className = \"mainMenuContainer\">\r\n\r\n                    <ul className =\"mainMenu\">\r\n\r\n                       <Link to=\"/\"><li><a href=\"javascript:void(0);\">Home</a></li></Link>\r\n\r\n                       <Link to=\"/aboutus\"><li><a href =\"javascript:void(0);\">About Us</a></li></Link>\r\n\r\n                       <Link to=\"/corona\"><li className=\"coronaLink\"><a href =\"javascript:void(0);\">CORONA update</a></li></Link>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n \r\n\r\nexport default mainmenu;","import React from 'react';\r\n\r\nimport MainMenu from \"./mainmenu/mainmenu\";\r\n\r\nimport './header.css';\r\n\r\n \r\n\r\nconst Header = () => {\r\n\r\nreturn(\r\n\r\n    <div>\r\n\r\n        <div className =\"header\">\r\n\r\n            <MainMenu/>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n);\r\n\r\n \r\n\r\n}\r\n\r\n \r\n\r\nexport default Header;\r\n\r\n ","import React, { Component } from 'react';\r\n\r\nimport './WorldList.css';\r\n\r\nimport CoronaData from '../data/coronadata.json';\r\n\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport default class WorldList extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n\r\n\r\n        this.state = {\r\n\r\n            posts: [],\r\n\r\n            errorMsg: ''\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        axios\r\n\r\n            .get('https://api.covid19api.com/summary')\r\n\r\n            .then(response => {\r\n\r\n                console.log(response)\r\n\r\n                let postdata = [];\r\n\r\n                postdata.push(response);\r\n\r\n                this.setState({ posts: postdata })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                console.log(error)\r\n\r\n                this.setState({ errorMsg: 'Error retrieving data' })\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const { posts, errorMsg } = this.state\r\n\r\n        console.log(posts.length);\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n\r\n\r\n                <table className=\"worldListTable\">\r\n\r\n\r\n\r\n                    {posts.length\r\n                        ? posts.map(post => {\r\n\r\n                            return (\r\n\r\n                                <tbody>\r\n\r\n                                    <tr><td>New Confirmed -- {post.data.Global.NewConfirmed}</td></tr>\r\n\r\n                                    <tr><td>Total Confirmed -- {post.data.Global.TotalConfirmed}</td></tr>\r\n\r\n                                    <tr><td>New Deaths -- {post.data.Global.NewDeaths}</td></tr>\r\n\r\n                                    <tr><td>Total Deaths -- {post.data.Global.TotalDeaths}</td></tr>\r\n\r\n                                    <tr><td>New Recovered -- {post.data.Global.NewRecovered}</td></tr>\r\n\r\n                                    <tr><td>Total Recovered -- {post.data.Global.TotalRecovered}</td></tr>\r\n\r\n                                </tbody>\r\n\r\n\r\n\r\n                            )\r\n\r\n                        }\r\n\r\n                        )\r\n\r\n                        : null}\r\n\r\n\r\n\r\n                </table>\r\n\r\n                {errorMsg ? <div>{errorMsg}</div> : null}\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\nimport './countrylist.css';\r\n\r\nimport CoronaData from '../data/coronadata.json';\r\n\r\nimport axios from 'axios'\r\n\r\nimport WorldList from '../WorldList/WorldList';\r\n\r\n\r\n\r\nexport default class coronaDetails extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props)\r\n\r\n\r\n\r\n        this.state = {\r\n\r\n            posts: [],\r\n\r\n            errorMsg: ''\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        axios\r\n\r\n            .get('https://api.covid19api.com/summary')\r\n\r\n            .then(response => {\r\n\r\n                console.log(response)\r\n\r\n                let postdata = [];\r\n\r\n                postdata.push(response);\r\n\r\n                this.setState({ posts: postdata })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                console.log(error)\r\n\r\n                this.setState({ errorMsg: 'Error retrieving data' })\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        const { posts, errorMsg } = this.state\r\n\r\n        console.log(posts.length);\r\n        \r\n        const list_date = posts.length\r\n            ? posts.map(post => {\r\n               \r\n                let date = new Date(post.data.Date);\r\n                let convertedDate = date.toDateString();\r\n                return (\r\n                    <p className = \"date\"><b>Date : {convertedDate}</b></p>\r\n\r\n                )\r\n            }):null\r\n\r\n\r\n            \r\n\r\n\r\n        return (\r\n\r\n            <div className=\"countryListContainer\">\r\n                {list_date}\r\n                   \r\n                <div className=\"col-sm-12 coronaPage\">\r\n\r\n                    <div className=\"col-sm-3\">\r\n\r\n                        <WorldList />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-sm-9\">\r\n\r\n                        <select id=\"sel\" onchange=\"show(this)\">\r\n\r\n                            <option value=\"\">-- Select --</option>\r\n\r\n                        </select>\r\n\r\n\r\n\r\n                        <table className=\"countryTable\"><thead><tr>\r\n\r\n                            <td>Country</td>\r\n\r\n                            <td>New Confirmed</td>\r\n\r\n                            <td>Total Confirmed</td>\r\n\r\n                            <td>New Deaths</td>\r\n\r\n                            <td>Total Deaths</td>\r\n\r\n                            <td>New Recovered</td>\r\n\r\n                            <td>Total Recovered</td>\r\n\r\n                        </tr></thead>\r\n\r\n                            {posts.length\r\n\r\n                                ? posts.map(post => <tbody>{post.data.Countries.map(ctry => {\r\n\r\n                                    return (\r\n\r\n                                        <tr>\r\n\r\n                                            <td>{ctry.Country}</td>\r\n\r\n                                            <td>{ctry.NewConfirmed}</td>\r\n\r\n                                            <td>{ctry.TotalConfirmed}</td>\r\n\r\n                                            <td>{ctry.NewDeaths}</td>\r\n\r\n                                            <td>{ctry.TotalDeaths}</td>\r\n\r\n                                            <td>{ctry.NewRecovered}</td>\r\n\r\n                                            <td>{ctry.TotalRecovered}</td>\r\n\r\n                                        </tr>\r\n\r\n                                    )\r\n\r\n                                }\r\n\r\n                                )}</tbody>)\r\n\r\n                                : null}\r\n\r\n                        </table>\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                {errorMsg ? <div>{errorMsg}</div> : null}\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n","import React, { Component } from 'react';\n\nimport logo from './logo.svg';\n\nimport './App.css';\n\nimport Aboutus from './aboutus/aboutus';\n\nimport Home from './home/home';\n\nimport Header from './header/header';\n\nimport Corona from './countrylist/countrylist';\n\nimport WorldList from './WorldList/WorldList';\n\nimport {\n\n  BrowserRouter as Router,\n\n  Switch,\n\n  Route,\n\n  Link\n\n} from 'react-router-dom';\n\n \n\nclass App extends Component {\n\n \n\n  render() {\n\n      return (\n\n        <Router>\n\n        <div className = \"container-fluid\">\n\n             <Header/>\n\n             <Switch>\n\n             <Route path=\"/\" exact component = {Home}/>\n\n             <Route path=\"/aboutus\" component={Aboutus}/>\n\n             <Route path=\"/corona\" component = {Corona}/>                   \n\n             </Switch> \n\n        </div>\n\n        </Router>\n\n      );\n\n  }\n\n \n\n}\n\n \n\n    export default App;\n\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}